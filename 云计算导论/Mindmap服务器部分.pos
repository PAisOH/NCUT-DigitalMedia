{"diagram":{"image":{"x":0,"width":200,"y":0,"pngdata":"iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAsUlEQVR4nO3BAQEAAACCIP+vbkhAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8GXHmAAFMgHIEAAAAAElFTkSuQmCC","height":200},"elements":{"leftChildren":[{"parent":"root","children":[{"parent":"088f5a96b134","children":[{"parent":"227d8b7ffee6","children":[{"parent":"a53db54dd195","children":[],"id":"b183dbb4196d","title":"What:Web Service做什么"},{"parent":"a53db54dd195","children":[],"id":"6a864f820511","title":"Where:Web&nbsp;Service位于哪里"},{"parent":"a53db54dd195","children":[],"id":"5f4319f4a90a","title":"How:怎么调用"}],"style":{"font-weight":"bold"},"id":"a53db54dd195","title":"WSDL(Web Service Desciption Language)：<br>是采用<b><u>XML</u></b>语言来描述Web&nbsp;Service的属性的语言"},{"parent":"227d8b7ffee6","children":[],"id":"d1ffb30a065e","title":"如果将Web&nbsp;Service作为一个分布式对象来看，WSDL就是<br>Web&nbsp;Service的<b><u>接口描述</u></b>语言（IDL）"},{"parent":"227d8b7ffee6","children":[],"id":"ddce3a78f866","title":"WSDL定义了一套基于XML的语法，将Web&nbsp;Service描述为能<br>够进行消息交换的服务访问点的集合"},{"parent":"227d8b7ffee6","children":[{"parent":"24b1b64640fd","image":{"w":350,"h":211,"url":"https://cdn2.processon.com/61bd8fb6e4b035b6f2095566?e=1639816647&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:QE2s81ON1uZRvJL7UYrQF9472Rg="},"children":[],"id":"ba8ea06bc1a6","title":""}],"id":"24b1b64640fd","title":"WSDL结构"}],"id":"227d8b7ffee6","title":"Intro:WSDL"},{"parent":"088f5a96b134","children":[],"id":"5fbe9c8b7098","title":"一种WS实现方式"},{"parent":"088f5a96b134","children":[],"style":{"font-weight":"bold","font-style":"normal"},"id":"22ea9bab1787","title":"简单对象访问协议&nbsp;SOAP（Simple&nbsp;Object&nbsp;Access&nbsp;Protocol）是<br>在松散的、分布的环境中使用XML交换结构化的和类型化的信<br>息的一种简单协议"},{"parent":"088f5a96b134","children":[],"id":"5833207e4c2c","title":"XML的标准化为跨平台之间的交流带来了极大的方便，而<br>SOAP的实质就是把这种交流的方式标准化了"},{"parent":"088f5a96b134","children":[],"id":"3ec221fe65f0","title":"SOAP本身并不定义任何应用语义，如编程模型或特定语义实<br>现，它只定义了一种简单的以模块化的方式包装数据的机制"},{"parent":"088f5a96b134","children":[],"id":"97593d5640cd","title":"将数据/对象打包成XML格式的数据"},{"parent":"088f5a96b134","children":[{"parent":"124d122ebd6f","children":[],"id":"5ff14abde547","title":"SOAP是一个轻型的分布式计算协议，它允许在一个分布式的环境中交换信息"},{"parent":"124d122ebd6f","children":[],"id":"3ed190ac9ad6","title":"SOAP用基于文本的XML协议与分布式系统通信，而不是用其<br>他分布式计算协议（例如CORBA、RMI和DCOM）使用的二进<br>制格式。这使得SOAP具有跨硬件平台、操作系统、编程语言<br>和网络硬件平台的高度互操作性"},{"parent":"124d122ebd6f","children":[],"id":"d59db37348a8","title":"<b><u>SOAP可以在HTTP上传输</u></b>，HTTP允许它利用已有的基础设施<br>投资，例如Web服务器、代理服务器和防火墙。SOAP也可以<br>用其他的协议（如SMTP和JMS）进行传输"},{"parent":"124d122ebd6f","children":[],"style":{"font-weight":"bold"},"id":"771a09a01940","title":"SOAP的调用效率比较低<br>•&nbsp;HTTP不是有效率的通信协议<br>•&nbsp;XML需要额外的文件解析"}],"id":"124d122ebd6f","title":"Why&nbsp;SOAP"}],"id":"088f5a96b134","title":"3. SOAP"},{"parent":"root","children":[{"parent":"e5ef46f383e1","children":[],"style":{"font-weight":"bold"},"id":"9265945784fb","title":"REST(Representational&nbsp;State&nbsp;Transfer)&nbsp;表述性状态转移，一种架构风格<br>"},{"parent":"e5ef46f383e1","children":[{"parent":"16ab49c4cb9c","children":[],"id":"7e52633b079e","title":"REST&nbsp;从<b>资源</b>的角度来观察整个网络"},{"parent":"16ab49c4cb9c","children":[],"id":"dcbcdaa8f8c2","title":"分布在各处的资源由<b><u>URI&nbsp;</u></b>确定"},{"parent":"16ab49c4cb9c","children":[],"id":"9c4d4100d900","title":"客户端的应用通过URI来获取资源的<u><b>表述</b></u>"},{"parent":"16ab49c4cb9c","children":[],"id":"21aae48e97b1","title":"获得这些表述致使这些应用程序转变了其状态。随<br>着不断获取资源的表述，客户端应用不断地在转变<br>着其状态，所谓<b><u>表述性的状态转移</u></b>"}],"collapsed":false,"id":"16ab49c4cb9c","title":"不是一个具体的标准或者架构，只是一套设计原则和一种架构风格"},{"parent":"e5ef46f383e1","children":[{"parent":"a369ee898e7b","children":[],"id":"e20eafc233d4","title":"A&nbsp;resource&nbsp;is&nbsp;anything&nbsp;that’s&nbsp;important&nbsp;enough&nbsp;to&nbsp;be&nbsp;<br>referenced&nbsp;as&nbsp;a&nbsp;thing&nbsp;in&nbsp;itself&nbsp;[Rich+07]&nbsp;；<br>任何事物，只要有被引用的必要，就是一个资源(resource)。它可<br>以是一个实物，也可以是一个抽象的概念。"},{"parent":"a369ee898e7b","children":[],"id":"01cf70ccfed4","title":"通常一个资源是某个可以存放在计算机上并体现为比特流的事物。<br>在Web中，可以这样认为——资源是URI标示的东西"},{"parent":"a369ee898e7b","children":[{"parent":"d9d7e5a694ce","children":[],"id":"b1d6c23ab11e","title":"文档、图片"},{"parent":"d9d7e5a694ce","children":[],"id":"279e34217c3e","title":"服务"},{"parent":"d9d7e5a694ce","children":[],"id":"5f583d364313","title":"资源的集合"},{"parent":"d9d7e5a694ce","children":[],"id":"578f4755b68b","title":"不是网络上的对象也可以被看作资源(eg人)"}],"id":"d9d7e5a694ce","title":"分类"},{"parent":"a369ee898e7b","children":[{"parent":"e7b2da3c3f34","children":[],"id":"404bc7fc6752","title":"作用：是为互联网上所涉及到的所有资源提供一种统一的唯一标识"},{"parent":"e7b2da3c3f34","children":[{"parent":"a5f7f263440c","children":[],"id":"9f9d5ba4b737","title":"&lt;schme&gt;:&lt;hier-part&gt;[?&lt;query&gt;][#&lt;fragment&gt;]<br>•&lt;schme&gt;是命名方案名称，例如http、mailto等。后面必须是一<br>个冒号。<br>•&lt;hier-part&gt;是一个表示层次结构的成分，例如域名加上存储路径<br>和文件名。<br>•可选部分&lt;query&gt;表示某种查询字符串，这种字符串开头必须有<br>一个问号。<br>•另一个可选部分&lt;fragment&gt;是片断标识，以符号＃开头。<br>URL和URN都是URI的子集"}],"id":"a5f7f263440c","title":"组成"}],"id":"e7b2da3c3f34","title":"URI(Uniform Resources Indentifier)统一资源标志符号"}],"collapsed":false,"id":"a369ee898e7b","title":"什么是资源Resource"},{"parent":"e5ef46f383e1","children":[{"parent":"b113f09f8238","children":[],"style":{"font-weight":"bold"},"id":"14ee1a55eaf3","title":"资源和表述不是一码事。Web上获取的不是资源，而是资源的表述"},{"parent":"b113f09f8238","children":[],"id":"23ec632a82f4","title":"a&nbsp;representation&nbsp;is&nbsp;just&nbsp;some&nbsp;data&nbsp;about&nbsp;the&nbsp;current&nbsp;state&nbsp;of&nbsp;a<br>resource&nbsp;[Rich+07]<br>如：以特定语言特定文件格式表示的字节序列"},{"parent":"b113f09f8238","children":[{"parent":"62b94e217d32","image":{"w":316,"h":188,"url":"https://cdn2.processon.com/61bd966ae4b03c27642975fb?e=1639818362&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:kVRieJV4KNFcbqBv6Vtw9tRZtO4="},"children":[],"id":"ad4926263f0c","title":""},{"parent":"62b94e217d32","children":[{"parent":"0b0acec9f8db","children":[],"style":{"font-weight":"normal"},"id":"7151f0c12148","title":"JSON(JavaScript&nbsp;Object&nbsp;Notation)&nbsp;是一种轻量级的数据交换格式"},{"parent":"0b0acec9f8db","children":[],"id":"a46e8a8bc5eb","title":"JSON&nbsp;语法是&nbsp;JavaScript&nbsp;语法的子集"},{"parent":"0b0acec9f8db","children":[],"id":"ec2b58392aab","title":"由名称、值对构成"},{"parent":"0b0acec9f8db","children":[],"id":"ddd49855a943","title":"JSON&nbsp;可以将&nbsp;JavaScript&nbsp;对象中表示的一组数据转换为字符串，然后\n就可以在函数之间轻松地传递这个字符串，或者在异步应用程序中将\n字符串从&nbsp;Web&nbsp;客户机传递给服务器端程序"},{"parent":"0b0acec9f8db","image":{"w":290,"h":189,"url":"https://cdn2.processon.com/61bd9708e4b0fd3063209256?e=1639818520&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:qBKN9uc1Q-Dflioy4Y84XNQEOzI="},"children":[],"id":"31a4bbf6a981","title":""},{"parent":"0b0acec9f8db","children":[{"parent":"6a7514a5bcc0","image":{"w":194,"h":115,"url":"https://cdn2.processon.com/61bd9725e4b0c3bb9c6e611b?e=1639818549&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:W35pY0a-7fXauQpKQ9V_JHo-LrM="},"children":[],"id":"502ba1b16d89","title":""},{"parent":"6a7514a5bcc0","children":[{"parent":"4081b2de08fb","children":[],"id":"3abbf2eb1ee9","title":"&nbsp;相对于XML，它<b><u>更加易读、更便于肉眼检查</u></b><br>"},{"parent":"4081b2de08fb","children":[],"id":"bd475a48d9f5","title":"在语法的层面上，JSON中的分隔符限于引号、中括号、大括<br>号、冒号和逗号,和<u><b>XML相比体积变小,有利于网络传输</b></u>"},{"parent":"4081b2de08fb","children":[],"id":"973ff50274c8","title":"JavaScript中解析JSON是其原生支持的功能,所以在JS中<b><u>使用<br>起来极为简单</u></b>,JSON配合AJAX使用可以很大的提高开发效率,<br>而操作XML的DOM语法就不那么简洁了<br>"}],"id":"4081b2de08fb","title":"优点"},{"parent":"6a7514a5bcc0","children":[{"parent":"eba8bf5abdfc","children":[],"id":"083b153039f1","title":"在JSON中不支持命名空间的概念"},{"parent":"eba8bf5abdfc","children":[],"id":"38de23d35090","title":"JSON验证过程比一般的XML复杂&nbsp;,XML有DTD和schema的通用的验<br>证方式，JSON&nbsp;Schema尚在发展之中&nbsp;（http://json-schema.org/）"}],"id":"eba8bf5abdfc","title":"缺点"}],"id":"6a7514a5bcc0","title":"基本语法"}],"id":"0b0acec9f8db","title":"JSON"}],"id":"62b94e217d32","title":"对于给定的资源，可以有很多不同的表述"}],"collapsed":false,"id":"b113f09f8238","title":"资源表述Representation"},{"parent":"e5ef46f383e1","children":[{"parent":"24788e332ce3","children":[],"id":"a811845e23e9","title":"任何可能的情况下，使用链接指引可以被标识的资源"},{"parent":"24788e332ce3","children":[],"id":"dff6b888277e","title":"大多数表述是超媒体(hypermedia)的，它不仅包含数据，还包含指向其它资源的链接"},{"parent":"24788e332ce3","children":[],"id":"a20d3b3afb35","title":"使用URI而不是id？<br>链接可以指向由不同应用、不<br>同服务器甚至不同公司提供的<br>资源——因为URI命名规范是全<br>球标准，构成Web的所有资源<br>都可以互联互通"}],"collapsed":false,"id":"24788e332ce3","title":"超链:将资源链接到一起Hateoas"},{"parent":"e5ef46f383e1","children":[{"parent":"c49e35c73233","children":[],"id":"f666a5c13e5c","title":"REST&nbsp;要求开发人员显式地使用&nbsp;HTTP&nbsp;方法，并且使用方式与<br>协议定义一致。&nbsp;这个基本&nbsp;REST&nbsp;设计原则建立了创建、读取、<br>更新和删除（create,&nbsp;read,&nbsp;update,&nbsp;and&nbsp;delete，CRUD）操作<br>与&nbsp;HTTP&nbsp;方法之间的一对一映射。&nbsp;根据此映射"},{"parent":"c49e35c73233","children":[],"id":"810feb43c259","title":"若要在服务器上创建资源，应该使用&nbsp;POST&nbsp;方法。选择合适的动词！"},{"parent":"c49e35c73233","children":[],"id":"c60df5c9ec6a","title":"&nbsp;若要检索某个资源，应该使用&nbsp;GET&nbsp;方法。"},{"parent":"c49e35c73233","children":[],"id":"242837264a37","title":"&nbsp;若要更改资源状态或对其进行更新，应该使用&nbsp;PUT&nbsp;方法。"},{"parent":"c49e35c73233","children":[],"id":"b83874b115fd","title":"&nbsp;若要删除某个资源，应该使用&nbsp;DELETE&nbsp;方法。"},{"parent":"c49e35c73233","image":{"w":149,"h":83,"url":"https://cdn2.processon.com/61bd99f8e4b09efb864f35bc?e=1639819273&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:ZoDk-OZZb9IY8KjcZwDGJR0kqBw="},"children":[],"id":"3118de945b44","title":"<br>"},{"parent":"c49e35c73233","children":[{"parent":"f4ec768787ac","children":[],"id":"9c1d470727f8","title":"HTTP方法的幂等性是指一次和多次请求某一个资源应该具有同样的副作用。"},{"parent":"f4ec768787ac","children":[{"parent":"ed0380a49626","children":[],"id":"107766a4db96","title":"HTTP&nbsp;GET方法用于获取资源，不应有副作用，所以是幂等的<br>"},{"parent":"ed0380a49626","children":[],"id":"ba22e6b40070","title":"<div class=\"mind-clipboard\">HTTP&nbsp;DELETE方法用于删除资源，有副作用，但它应该满足幂等性<br></div>"},{"parent":"ed0380a49626","children":[],"id":"41220e49da14","title":"两次相同的POST请求会在服务器端创建两份资源，它们具有不同的URI，<u><b>POST方法不具备幂等性</b></u>"},{"parent":"ed0380a49626","children":[],"id":"40b55eff0566","title":"PUT所对应的URI是要创建或更新的资源本身，因此，PUT方法具有幂等性"}],"id":"ed0380a49626","title":"HTTP方法的幂等性"}],"id":"f4ec768787ac","title":"幂等性(IDEMPOTENCE)"}],"collapsed":false,"id":"c49e35c73233","title":"统一资源访问接口(基于HTTP)"},{"parent":"e5ef46f383e1","children":[{"parent":"4f9d600f9f08","children":[],"id":"15ad242cbb27","title":"1.&nbsp;分析应用需求中的数据集，映射数据集到Rest服务的资源"},{"parent":"4f9d600f9f08","children":[],"id":"536ba6236ac1","title":"2.&nbsp;对于每一资源，命名它的&nbsp;URI。"},{"parent":"4f9d600f9f08","children":[],"id":"356cf88bf077","title":"3.&nbsp;为每一资源设计其&nbsp;Representations"},{"parent":"4f9d600f9f08","children":[],"id":"279baf7fa7b7","title":"4.&nbsp;用&nbsp;hypermedia&nbsp;links&nbsp;表述资源间的联系"},{"parent":"4f9d600f9f08","children":[],"id":"65403426969d","title":"5.&nbsp;为每一资源设计对其的操作。"},{"parent":"4f9d600f9f08","children":[],"id":"737fc465f883","title":"6.&nbsp;实现Rest服务部署到Web服务器上"},{"parent":"4f9d600f9f08","children":[],"id":"0533f4fb3a05","title":"7.&nbsp;使用浏览器进行测试"}],"id":"4f9d600f9f08","title":"设计及开发REST服务"},{"parent":"e5ef46f383e1","children":[{"parent":"65a4d3b83e97","children":[],"id":"6b8d38bc20c1","title":"负责学生信息的创建，修改，删除，查询。<br>学生信息主要包括：学号,姓名,性别,班级,电话,EMAIL<br>1.&nbsp;列举所涉及的相关资源，并为每种资源定义URI<br>来对其进行唯一标识；<br>2.&nbsp;为每种资源设计其表述形式，并利用超链建立各<br>类资源之间的关联关系；<br>3.&nbsp;设计REST服务接口，实现对资源的增、删、查<br>、改功能。仅需给出服务的名称、HTTP方法、URI<br>、输入参数、输出参数即可，无需给出服务的内部<br>实现代码"},{"parent":"65a4d3b83e97","image":{"w":162,"h":161,"url":"https://cdn2.processon.com/61bda002e4b0756e511ecdcf?e=1639820818&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:iufUcA5wk4HGH3vmousd3Rjvd2E="},"children":[],"id":"1a37d84b6bb8","title":""},{"parent":"65a4d3b83e97","image":{"w":186,"h":220,"url":"https://cdn2.processon.com/61bd9eb3e4b0c088723c2f2c?e=1639820483&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:xUPs3oKza230Eo_RudZ6ZATp8Gg="},"children":[],"id":"9deb8859a614","title":"获取学生信息"},{"parent":"65a4d3b83e97","image":{"w":141,"h":165,"url":"https://cdn2.processon.com/61bd9ecbe4b0915ee5313733?e=1639820507&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:CjSj3XoNGfrHURP6uSyS9SVJBf4="},"children":[{"parent":"a2fdc7f1486d","image":{"w":178,"h":172,"url":"https://cdn2.processon.com/61bd9ef5e4b021e96c682f06?e=1639820549&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:S34hV4tfGeWMD5rnXRE3ark9cWw="},"children":[],"id":"5c29187cceec","title":"输出中返回URI"}],"id":"a2fdc7f1486d","title":"新建学生信息"},{"parent":"65a4d3b83e97","image":{"w":148,"h":219,"url":"https://cdn2.processon.com/61bd9f15e4b0cf5c45632250?e=1639820581&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:k9yz3V3mXkbzG7Yuo5bAe0qcCXs="},"children":[],"id":"908a0dec52ae","title":"修改学生信息"},{"parent":"65a4d3b83e97","image":{"w":196,"h":125,"url":"https://cdn2.processon.com/61bd9f25e4b052d32a8aa3e8?e=1639820597&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:YEDkIpkDsY5DFKmF9HmdEsmtV9Y="},"children":[],"id":"0b78c53f97eb","title":"删除学生信息"}],"id":"65a4d3b83e97","title":"练习：学生信息管理系统"}],"id":"e5ef46f383e1","title":"4.REST服务"}],"children":[{"parent":"root","children":[{"parent":"3d42a531b4e4","children":[{"parent":"df0dd3e4ed11","children":[],"id":"ae236fc16d63","title":"Intangibility无形性：服务是一种活动，不是实物，看不见摸不着"},{"parent":"df0dd3e4ed11","children":[],"id":"6c3a02267abe","title":"Inseparability不可分离性：服务提供者和使用者都包含在服务的生产过程中"}],"collapsed":false,"id":"df0dd3e4ed11","title":"一般的服务特性"},{"parent":"3d42a531b4e4","children":[{"parent":"f933e43aa3f9","image":{"w":326,"h":189,"url":"https://cdn2.processon.com/61bd735be4b052d32a8a7ab0?e=1639809387&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:LRGHN-JM0e8JMJYygckp7-P2KQ0="},"children":[],"id":"de86f4f571c4","title":""}],"collapsed":false,"id":"f933e43aa3f9","title":"服务计算的四个核心概念"},{"parent":"3d42a531b4e4","children":[{"parent":"82ef150d5d6e","children":[],"id":"e49581f1947b","title":"服务是使用产品和资源创造价值的活动，它没有固定的表现形态，使用方法与具体的实现技术无关，其使用过程通常表现为一个多角色参与的、具有时效性的用户交互过程<br>服务组件：服务通常对应于一个<b><u>定义良好的、可寻址以及可组合的软件组件</u></b>在软件系统的构建过程中，服务组件又常被狭义称为“服务<br>"},{"parent":"82ef150d5d6e","children":[{"parent":"16a0b2dd4950","children":[],"id":"ef420023ce36","title":"外特性看：<b><u>一个服务被定义为显式的、独立于服务具体实现细节的接口</u></b>"},{"parent":"16a0b2dd4950","children":[],"id":"964bd091d48c","title":"&nbsp;内特性看：<b><u>服务封装了可复用的业务功能</u></b>，这些功能通常是大粒度业务，如业务过程<br>、业务活动等。服务的实现可采用任何技术平台，如J2EE、.Net等"},{"parent":"16a0b2dd4950","image":{"w":383,"h":241,"url":"https://cdn2.processon.com/61bd6fede4b0c3bb9c6e4c0d?e=1639808510&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:2fyrSAiRohqA7hGyqkQF7AxBXOE="},"children":[],"id":"1061fa13757f","title":""}],"id":"16a0b2dd4950","title":"含义"},{"parent":"82ef150d5d6e","children":[{"parent":"4c41cbcc5072","image":{"w":474,"h":75,"url":"https://cdn2.processon.com/61bd769de4b0c088723c09e7?e=1639810221&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:V87anCRllNr_uzAnTrijUgzCbfo="},"children":[],"id":"32d3efc8c15b","title":""},{"parent":"4c41cbcc5072","image":{"w":339,"h":77,"url":"https://cdn2.processon.com/61bd76c6e4b0f28391b788d2?e=1639810262&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:nWt7FSVr0ympCUJOrNZkeqjjXTE="},"children":[],"id":"af1dbce78a34","title":""}],"id":"4c41cbcc5072","title":"传统与软件服务"},{"parent":"82ef150d5d6e","children":[{"parent":"c9f19e16f189","children":[],"id":"098fb5ed3107","title":"基础设施即服务laaS：为用户提供按需付费的<u><b>基础设施服务</b></u>，例如虚拟服务器、存储等"},{"parent":"c9f19e16f189","children":[],"id":"05f82b5ad74d","title":"平台即服务PaaS：为用户提供基于可扩展的大规模基础设施的<b><u>平台环境服务</u></b>，例如云应用开发与运行环境、用户数据、信息资源、公共服务能力"},{"parent":"c9f19e16f189","children":[],"id":"bc3b7af67fef","title":"软件即服务SaaS：为用户提供基于云基础架构的<b><u>应用软件服务</u></b>，例如CRM、ERP、eHR"},{"parent":"c9f19e16f189","image":{"w":512,"h":213,"url":"https://cdn2.processon.com/61bd72d6e4b0d1ebf05f3064?e=1639809254&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:DtDqtxzJTTtUisoTIbGarVR5wxw="},"children":[],"id":"f5bffd4ba5f3","title":""}],"collapsed":false,"id":"c9f19e16f189","title":"服务模型<br>"}],"collapsed":false,"id":"82ef150d5d6e","title":"服务定义"},{"parent":"3d42a531b4e4","children":[{"parent":"db20562c8ffb","image":{"w":319,"h":263,"url":"https://cdn2.processon.com/61bd76e3e4b0b50d3748acbc?e=1639810291&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:1hX96kLoKXM9IjyZ5Sn3tFtkZ7Y="},"children":[],"id":"33ca9fbd695a","title":""},{"parent":"db20562c8ffb","children":[{"parent":"7077f6df8371","children":[],"style":{"font-weight":"bold"},"id":"2ba8e55b0120","title":"将一个复杂问题分解为更小的、相关的部分，每个部分都能被更好的创建、执行和管理"},{"parent":"7077f6df8371","children":[],"style":{"font-weight":"bold"},"id":"69e071ab9837","title":"每个部分都对应一个关注点或者问题的一个特定部分"}],"style":{"font-weight":"bold"},"id":"7077f6df8371","title":"代表了一种关注点分离<br>(Separation of concerns, SOC)的<br>复杂软件开发方法"},{"parent":"db20562c8ffb","children":[{"parent":"cc427c70f4a7","children":[],"id":"ae23a1c084e0","title":"组成复杂软件的基本逻辑称为“单元”"},{"parent":"cc427c70f4a7","children":[],"style":{"font-weight":"bold"},"id":"cd08c2170a0c","title":"服务自治、但并非孤立的"},{"parent":"cc427c70f4a7","children":[],"style":{"font-weight":"bold"},"id":"92b1b2f3abd5","title":"服务具有一定的通用性和标准化程度，但可以独立演化"}],"id":"cc427c70f4a7","title":"面向服务的软件开发方法"}],"id":"db20562c8ffb","title":"面向服务"},{"parent":"3d42a531b4e4","children":[{"parent":"b5fd504ff76e","children":[],"style":{"font-weight":"bold"},"id":"a7f4983945b9","title":"<b><u>定义：SOA(</u></b>Service-Oriented&nbsp;Architecture<b><u>)是一种基于服务组织计算资源，具有松耦合和间接服务寻址能力的软件体系结构哦风格</u></b>"},{"parent":"b5fd504ff76e","children":[{"parent":"a7c01a47deae","children":[{"parent":"3c84b9551572","children":[],"id":"81466f61e120","title":"软件体系结构：如何将一个分布式系统从逻辑上分解成相<br>关的组件，并且定义这些软件组件之间所具有的各种关系<br>，探索如何以最佳的方式划分一个系统、如何标识组件、<br>组件之间如何通信、信息如何沟通，怎么能够有序地进化<br>，以及上述的所有东西如何能够使用形式化的和非形式化<br>的符号加以描述"},{"parent":"3c84b9551572","children":[],"id":"2af738b0da88","title":"软件体系结构风格：人们在设计软件体系结构时，对经常<br>出现的问题（如性能问题、安全问题等）进行描述并给出<br>的成熟可靠的解决方案，是人们经验和知识的总结。例如<br>常见的分层体系结构风格就有助于不同组件之间实现信息<br>隐藏。不同的软件体系结构风格是可以被组合的，从而实<br>现更为复杂的设计目标"}],"id":"3c84b9551572","title":"<u><b>体系结构：SOA是一种软件体系结构风格</b></u>"},{"parent":"a7c01a47deae","children":[],"id":"9ef3b8b04020","title":"更广泛的技术角度：SOA还是<b><u>包含了编程模型和方法学</u></b>等在内的一整套系统构造方法和环境"},{"parent":"a7c01a47deae","children":[],"id":"72ef0c56960e","title":"软件开发商：SOA作为其中间件产品的<u><b>软件架构理念</b></u>(有时成为产品推广的“口号”)"},{"parent":"a7c01a47deae","children":[],"id":"d1556e7428d0","title":"业务角度：SOA尤指<b><u>以松散耦合方式</u></b>实现业务层面各种服务能力的共享、供给和重学得到方法学"}],"id":"a7c01a47deae","title":"<b><u>多角度诠释</u></b>"},{"parent":"b5fd504ff76e","children":[{"parent":"717d2797b1b9","image":{"w":375,"h":224,"url":"https://cdn2.processon.com/61bd79abe4b022d1e2a2a882?e=1639811003&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:qbidsK0XUcM9VPn9lhKAFu8kF3E="},"children":[],"id":"ebc9260fe2c2","title":""}],"id":"717d2797b1b9","title":"<b><u>SOA基本原理：体系结构</u></b>"},{"parent":"b5fd504ff76e","children":[{"parent":"f7508718bb80","children":[],"id":"1e72714f5764","title":"消除语言、平台和厂商依赖：服务描述对消费者隐藏了服务的实现细节，消除了传统构件所<br>具有的语言、平台和厂商相关性等假依赖关系"},{"parent":"f7508718bb80","children":[],"id":"6fc1cc71d0db","title":"消除时间依赖：对服务异步交互方式的支持是消除时间依赖的关键所在"},{"parent":"f7508718bb80","children":[],"id":"c61046436a81","title":"消除访问地址依赖：通过把服务访问地址的相关信息注册到服务注册中心，消费者<br>可以通过检索来发现需要的服务。这使得消费者在使用服务前不<br>再一定需要知道服务的访问地址，从而消除了对访问地址的依赖"},{"parent":"f7508718bb80","children":[],"id":"1172070c50f3","title":"消除访问协议依赖：消费者可以不用关心服务的具体实现细节，并以统一的方式和<br>服务进行交互"}],"style":{"font-weight":"bold"},"id":"f7508718bb80","title":"消除依赖"},{"parent":"b5fd504ff76e","children":[{"parent":"73683ae145dc","customWidth":555.5263157894738,"children":[],"id":"6cff0fc55036","title":"与SOA系统的基本构造元素——<b>Web服务</b>相关的一组技术。具体包括：Web服务建模、Web服务的描述、发布与发现技术、Web服务通信技术、Web服务交互技术、Web服务组合技术、Web服务安全和QoS保障技术、Web服务的事务管理技术等"},{"parent":"73683ae145dc","children":[],"id":"7f4dbb883281","title":"<b>SOA工程</b>相关的一组技术。具体包括SOA方法学、领<br>域建模、需求分析、服务编程与开发技术，以及基<br>于服务的信息集成、应用集成等服务集成技术等"},{"parent":"73683ae145dc","children":[],"id":"fc8a813483bc","title":"与<b>分布式系统</b>共性问题相关的一组基础技术，包括<br>SOA系统的体系结构、可伸缩性、可靠性及可用性<br>保障技术等"}],"id":"73683ae145dc","title":"SOA相关技术"},{"parent":"b5fd504ff76e","children":[{"parent":"f0f2fac50cfa","children":[],"id":"630ca625301c","title":"W3C(World Wide Web Consortium)万维网联盟"},{"parent":"f0f2fac50cfa","children":[],"id":"f94e7f61669b","title":"OASIS(Organization for Advancement&nbsp; of Structured Information Standards)结构化信息标准促进组织"},{"parent":"f0f2fac50cfa","children":[],"id":"03531383d8b3","title":"WS-I(Web Services Interoperability)Web服务互操作组织"},{"parent":"f0f2fac50cfa","children":[],"id":"66a6ef243097","title":"OMG(Object&nbsp;Management&nbsp;Group)对象管理组织"},{"parent":"f0f2fac50cfa","children":[],"id":"7e766d3ce25c","title":"OSOA(Open&nbsp;Service&nbsp;Oriented&nbsp;Architecture)开放面向服务架构协作组织"}],"id":"f0f2fac50cfa","title":"标准化或业界协作组织"}],"id":"b5fd504ff76e","title":"SOA<br>面向服务架构"},{"parent":"3d42a531b4e4","children":[{"parent":"37be8002e63f","children":[{"parent":"01a2f4705dc0","children":[],"id":"7a7c5f73a8e7","title":"Web服务及其协议栈是对SOA理念的一种最初尝试<br>。它将服务实现为一种可以<b><u>自包含、自描述以及<br>模块化</u></b>的Web组件，并可以通过Web进行发布、查<br>找和调用"},{"parent":"01a2f4705dc0","children":[],"id":"53c34cde4fbd","title":"Web服务：是由<b><u>URI标识</u></b>的软件应用，其接口和绑<br>定可以用<u><b>XML</b></u>来定义和描述并且可以被发现。Web<br>服务可以和其他软件代理（agent）之间通过<u><b>基<br>于Internet的协议</b></u>以<u><b>XML消息交换</b></u>的方式直接交<br>互 ——W3C"}],"id":"01a2f4705dc0","title":"背景"},{"parent":"37be8002e63f","children":[{"parent":"9553c1f08c84","children":[{"parent":"1cfcb0c43040","children":[],"id":"02b52e0d6cfc","title":"怎样调用并触发一个Web服务"}],"id":"1cfcb0c43040","title":"SOAP((Simple&nbsp;Object&nbsp;Access&nbsp;Protocol)"},{"parent":"9553c1f08c84","children":[{"parent":"14f96a14963d","children":[],"style":{"font-weight":"bold"},"id":"a26c530b02d6","title":"如何描述一个Web服务"}],"id":"14f96a14963d","title":"WSDL(Web&nbsp;Service&nbsp;Description&nbsp;Language)"},{"parent":"9553c1f08c84","children":[{"parent":"9eb0ce74e872","children":[],"id":"7c732db046b8","title":"如何发布、管理及查找Web服务的描述信息"}],"id":"9eb0ce74e872","title":"UDDI(Universal&nbsp;Description&nbsp;Discovery&nbsp;and&nbsp;Integration)"},{"parent":"9553c1f08c84","image":{"w":217,"h":149,"url":"https://cdn2.processon.com/61bd7f8de4b0d1ebf05f35e8?e=1639812509&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:JqEo49VaSjrrYtAjDbkhnCpC7b4="},"children":[],"id":"fa7bf21086bd","title":""}],"id":"9553c1f08c84","title":"WEB服务技术的基本协议"},{"parent":"37be8002e63f","note":"Web Services在需要通过Web进行互操作或远程调用的情况下最适用","children":[{"parent":"76c82f337640","children":[],"id":"06c464572236","title":"适合的应用场合：跨防火墙通信，应用程序集成，B2B集成，软件和数据重用"},{"parent":"76c82f337640","children":[{"parent":"716c41480501","children":[],"id":"68e5250c579c","title":"1.&nbsp;单机应用程序（使用本地API更高效；不便于对本地系统资源进行操作"},{"parent":"716c41480501","children":[],"id":"c2626430cade","title":"2.局域网的同构应用程序（Web&nbsp;Services大多基于HTTP协议，在同构局域网环境下不如应用协议效率高（如DCOM,RMI,.NETRemoting等））"}],"id":"716c41480501","title":"不适用的场合"}],"id":"76c82f337640","title":"WEB服务的应用场景和局限"},{"parent":"37be8002e63f","children":[{"parent":"dabe9d8b8402","children":[{"parent":"6f184e423ce4","children":[],"id":"2294340d805d","title":"构建：开发和测试服务实现、定义服务接口描述和定义Web&nbsp;Services实现描述"},{"parent":"6f184e423ce4","children":[],"id":"4c0471c5b003","title":"部署：向注册中心发布服务接口和服务实现的定义，把Wen&nbsp;Services部署到执行环境中"},{"parent":"6f184e423ce4","children":[],"id":"11394524f355","title":"运行：调用Web&nbsp;Services"},{"parent":"6f184e423ce4","children":[],"id":"d29d22d42983","title":"管理：持续管理和经营Web Services应用程序"}],"id":"6f184e423ce4","title":"开发生命周期"},{"parent":"dabe9d8b8402","children":[{"parent":"c80f6deba7f3","children":[],"id":"58c0e0940564","title":"基于XML的Web&nbsp;Services<br>协议栈，如<br>SOAP/UDDI/WFML,及基于<br>websphere应用服务器的软<br>件整合"},{"parent":"c80f6deba7f3","image":{"w":282,"h":271,"url":"https://cdn2.processon.com/61bd8242e4b08126ec37b059?e=1639813202&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:rqUl7BBZmOeFK0JACQ-H2O3qjeg="},"children":[],"id":"b2ee622b7022","title":""}],"id":"c80f6deba7f3","title":"IBM的Web Services框架"},{"parent":"dabe9d8b8402","children":[{"parent":"48e155b82b09","children":[],"id":"b6ef32f00f18","title":"为Web服务应用程序的创建和发布提供了平台"},{"parent":"48e155b82b09","image":{"w":530,"h":161,"url":"https://cdn2.processon.com/61bd82b5e4b0ba62ee07d37a?e=1639813318&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:c4UNEnKYeJsRzfTHMEhcrKS_X6E="},"children":[],"id":"a2968f833bde","title":""}],"id":"48e155b82b09","title":"Apache的SOAP服务器：AXIS"}],"id":"dabe9d8b8402","title":"WEB服务开发过程"}],"id":"37be8002e63f","title":"Web服务"}],"id":"3d42a531b4e4","title":"1. 服务计算原理和基础"},{"parent":"root","children":[{"parent":"c90ed646d71b","children":[],"id":"061075b4e9b6","title":"标记语言(置标语言)Markup&nbsp;Language：<br>用一系列约定好的标记来对电子文档进行标记，以实现<br>对电子文档的语义、结构、及格式的定义。这些标记必<br>须很容易的和内容区分，并且易于识别"},{"parent":"c90ed646d71b","children":[],"id":"2582ea514cd3","title":"XML(e<b>X</b>tensible <b>M</b>arkup <b>L</b>anguage)可扩展标记语言"},{"parent":"c90ed646d71b","children":[],"id":"d703780c209a","title":"•XML&nbsp;是一种<b><u>标记语言</u></b>，可以标记任何一种事物，很类似&nbsp;HTML<br>•XML&nbsp;的设计宗旨是<b><u>传输数据</u></b>，而非显示数据。为数据交换和数据共享提供平台无关的数据格式，可以提供对数据的简单存储。<br>•XML同时也是一组规范，需遵守这一规范来开发自己的软件或信息<br>•XML&nbsp;被设计为具有<b><u>自我描述性</u></b><br>•XML&nbsp;是<b>&nbsp;W3C&nbsp;的推荐标准</b>（<b><u>W3C</u></b>，万维网联盟（World&nbsp;Wide&nbsp;WebConsortium），&nbsp;<b><u>1998年2月正式推出</u></b>"},{"parent":"c90ed646d71b","children":[{"parent":"35164d3435f1","image":{"w":475,"h":269,"url":"https://cdn2.processon.com/61bd8967e4b0fd306320833b?e=1639815031&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:3KrMzD8bQ09apiCkhzSXDlwDFwQ="},"children":[],"id":"124c448a291a","title":""}],"id":"35164d3435f1","title":"整体结构"},{"parent":"c90ed646d71b","children":[{"parent":"4f35683d0012","children":[{"parent":"1b0ef212bc6f","children":[],"id":"a36badf04e3c","title":"在XML中，“形式良好”<b><u>(well-formed)</u></b>有着明确的标准，即<u><b>要遵守XML1.0规范中的语法规则</b></u>"},{"parent":"1b0ef212bc6f","children":[{"parent":"3b7df7a8aaa9","children":[],"id":"7eb11d44067c","title":"确定且唯一的根元素"},{"parent":"3b7df7a8aaa9","children":[],"id":"54224bd440f1","title":"元素的标记区分大小写，开始标记和结束标记匹配"},{"parent":"3b7df7a8aaa9","children":[],"id":"d9b1c8450254","title":"正确的元素标记嵌套"},{"parent":"3b7df7a8aaa9","children":[],"id":"a652454c5038","title":"为属性赋值时必须将属性值用引号括起来"},{"parent":"3b7df7a8aaa9","children":[],"id":"01e6c679ce69","title":"同一个元素属性不能重复"}],"id":"3b7df7a8aaa9","title":"形式良好是一篇XML文档在语法上的最基本的要求，只有形式<br>良好的XML文档才能被正确地分析和处理，形式良好的文档易<br>于浏览器浏览，简化浏览器的设计"},{"parent":"1b0ef212bc6f","image":{"w":391,"h":273,"url":"https://cdn2.processon.com/61bd8abde4b0cf5c45630fdc?e=1639815374&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:0W2N4jUmolUPKiU0u4ZQUJrPqeA="},"children":[],"id":"bc527b7c2aca","title":""}],"style":{"font-weight":"bold"},"id":"1b0ef212bc6f","title":"Well-Formed&nbsp;XML"},{"parent":"4f35683d0012","children":[],"id":"b8cd258e7dc7","title":"文件的序文必须包含合适的文件形态宣告，该宣告中包括了文件模式定义，如DTD(Document Type Definition),XML Schema，负责定义文件结构"},{"parent":"4f35683d0012","children":[],"id":"321602f4441c","title":"文件其余部分必须符合模式定义中所定义的结构"},{"parent":"4f35683d0012","children":[{"parent":"fe93e48dae06","image":{"w":215,"h":167,"url":"https://cdn2.processon.com/61bd8d6de4b0b50d3748be33?e=1639816061&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:zE1HKjH1pb6YxT47ePFEx57B-Pg="},"children":[],"id":"987fe330c631","title":""},{"parent":"fe93e48dae06","image":{"w":341,"h":255,"url":"https://cdn2.processon.com/61bd8d61e4b04346c9511160?e=1639816050&token=trhI0BY8QfVrIGn9nENop6JAc6l5nZuxhjQ62UfM:VoupHzrEqH1DPultvBdITaGwW78="},"children":[],"id":"abe1d1a4bad8","title":""}],"id":"fe93e48dae06","title":"练习题"}],"id":"4f35683d0012","title":"有效的(valid)"}],"id":"c90ed646d71b","title":"2. XML<br>"}],"root":true,"theme":"retro_theme7","id":"root","title":"云计算导论2. 服务器","structure":"mind_free"}},"meta":{"exportTime":"2024-07-30 21:24:42","member":"","diagramInfo":{"creator":"","created":"","modified":"","title":"","category":""},"id":"","type":"ProcessOn Schema File","version":"1.0"}}